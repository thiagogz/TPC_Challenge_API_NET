// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using TPC_Challenge_API_NET.Data;

#nullable disable

namespace TPC_Challenge_API_NET.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("RM99085")
                .UseCollation("USING_NLS_COMP")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbCampanha", b =>
                {
                    b.Property<decimal>("Campanhaid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("CAMPANHAID");

                    b.Property<decimal>("Canaltipo")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("CANALTIPO");

                    b.Property<decimal>("Clusterid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("CLUSTERID");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("CONTEUDO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("DESCRICAO");

                    b.Property<decimal>("Masterid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("MASTERID");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("TITULO");

                    b.HasKey("Campanhaid")
                        .HasName("TB_CAMPANHAS_PK");

                    b.HasIndex("Clusterid");

                    b.HasIndex("Masterid");

                    b.ToTable("TB_CAMPANHAS", "RM99085");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbCategoria", b =>
                {
                    b.Property<decimal>("Categoriaid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("CATEGORIAID");

                    b.Property<string>("Ativo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("ATIVO")
                        .IsFixedLength();

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("NOME");

                    b.HasKey("Categoriaid")
                        .HasName("TB_CATEGORIAS_PK");

                    b.ToTable("TB_CATEGORIAS", "RM99085");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbCluster", b =>
                {
                    b.Property<decimal>("Clusterid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("CLUSTERID");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("NAME");

                    b.HasKey("Clusterid")
                        .HasName("TB_CLUSTER_PK");

                    b.ToTable("TB_CLUSTER", "RM99085");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbCompra", b =>
                {
                    b.Property<decimal>("Compraid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("COMPRAID");

                    b.Property<DateTime>("Datacompra")
                        .HasColumnType("DATE")
                        .HasColumnName("DATACOMPRA");

                    b.Property<decimal>("Pdvid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("PDVID");

                    b.Property<decimal>("Usersid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("USERSID");

                    b.Property<decimal>("Valor")
                        .HasColumnType("NUMBER(15,2)")
                        .HasColumnName("VALOR");

                    b.HasKey("Compraid")
                        .HasName("TB_COMPRAS_PK");

                    b.HasIndex("Pdvid");

                    b.HasIndex("Usersid");

                    b.ToTable("TB_COMPRAS", "RM99085");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbCredit", b =>
                {
                    b.Property<decimal>("Creditid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("CREDITID");

                    b.Property<DateTime>("Datacredito")
                        .HasColumnType("DATE")
                        .HasColumnName("DATACREDITO");

                    b.Property<DateTime>("Dataexpiracao")
                        .HasColumnType("DATE")
                        .HasColumnName("DATAEXPIRACAO");

                    b.Property<string>("Utilizado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("UTILIZADO")
                        .IsFixedLength();

                    b.Property<decimal>("Valor")
                        .HasColumnType("NUMBER(15,2)")
                        .HasColumnName("VALOR");

                    b.HasKey("Creditid")
                        .HasName("TB_CREDIT_PK");

                    b.ToTable("TB_CREDIT", "RM99085");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbCreditCompra", b =>
                {
                    b.Property<decimal>("Compraid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("COMPRAID");

                    b.Property<decimal>("Creditid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("CREDITID");

                    b.HasIndex("Compraid");

                    b.HasIndex("Creditid");

                    b.ToTable("TB_CREDIT_COMPRAS", "RM99085");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbLoja", b =>
                {
                    b.Property<decimal>("Pdvid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("PDVID");

                    b.Property<string>("Ativo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("ATIVO")
                        .IsFixedLength();

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(9)")
                        .HasColumnName("CEP");

                    b.Property<string>("Complemento")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("COMPLEMENTO");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("ENDERECO");

                    b.Property<string>("Nomeloja")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("NOMELOJA");

                    b.Property<decimal>("Numero")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("NUMERO");

                    b.HasKey("Pdvid")
                        .HasName("TB_LOJA_PK");

                    b.ToTable("TB_LOJA", "RM99085");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbNotificaco", b =>
                {
                    b.Property<decimal>("Notificacoesid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("NOTIFICACOESID");

                    b.Property<DateTime>("Dataenvio")
                        .HasColumnType("DATE")
                        .HasColumnName("DATAENVIO");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("MENSAGEM");

                    b.Property<decimal>("Pdvid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("PDVID");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("TITULO");

                    b.HasKey("Notificacoesid")
                        .HasName("TB_NOTIFICACOES_PK");

                    b.HasIndex("Pdvid");

                    b.ToTable("TB_NOTIFICACOES", "RM99085");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbPonto", b =>
                {
                    b.Property<decimal>("Pointid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("POINTID");

                    b.Property<DateTime>("Datacreditado")
                        .HasColumnType("DATE")
                        .HasColumnName("DATACREDITADO");

                    b.Property<DateTime>("Dataexpirado")
                        .HasColumnType("DATE")
                        .HasColumnName("DATAEXPIRADO");

                    b.Property<string>("Utilizado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("UTILIZADO")
                        .IsFixedLength();

                    b.Property<decimal>("Valor")
                        .HasColumnType("NUMBER(15,2)")
                        .HasColumnName("VALOR");

                    b.HasKey("Pointid")
                        .HasName("TB_PONTOS_PK");

                    b.ToTable("TB_PONTOS", "RM99085");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbPontosCompra", b =>
                {
                    b.Property<decimal>("Compraid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("COMPRAID");

                    b.Property<decimal>("Pointid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("POINTID");

                    b.HasIndex("Compraid");

                    b.HasIndex("Pointid");

                    b.ToTable("TB_PONTOS_COMPRA", "RM99085");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbProduto", b =>
                {
                    b.Property<decimal>("Produtoid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("PRODUTOID");

                    b.Property<string>("Ativo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("ATIVO")
                        .IsFixedLength();

                    b.Property<decimal>("Categoriaid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("CATEGORIAID");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("NOME");

                    b.Property<decimal>("Pdvid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("PDVID");

                    b.Property<decimal>("Valor")
                        .HasColumnType("NUMBER(15,2)")
                        .HasColumnName("VALOR");

                    b.HasKey("Produtoid")
                        .HasName("TB_PRODUTOSV1_PK");

                    b.HasIndex("Categoriaid");

                    b.HasIndex("Pdvid");

                    b.ToTable("TB_PRODUTOS", "RM99085");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbUser", b =>
                {
                    b.Property<decimal>("Usersid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("USERSID");

                    b.Property<string>("Ativo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("ATIVO")
                        .IsFixedLength();

                    b.Property<string>("Complemento")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("COMPLEMENTO");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("ENDERECO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("NOME");

                    b.Property<decimal>("Numero")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("NUMERO");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("SOBRENOME");

                    b.Property<long>("Telefone")
                        .HasPrecision(11)
                        .HasColumnType("NUMBER(11)")
                        .HasColumnName("TELEFONE");

                    b.HasKey("Usersid")
                        .HasName("TB_USERS_PK");

                    b.ToTable("TB_USERS", "RM99085");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbUserCluster", b =>
                {
                    b.Property<decimal>("Userclusterid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("USERCLUSTERID");

                    b.Property<decimal>("Clusterid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("CLUSTERID");

                    b.Property<decimal>("Userid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("USERID");

                    b.HasKey("Userclusterid")
                        .HasName("TB_USER_CLUSTER_PK");

                    b.HasIndex("Clusterid");

                    b.HasIndex("Userid");

                    b.ToTable("TB_USER_CLUSTER", "RM99085");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbUserPdv", b =>
                {
                    b.Property<decimal>("Userpdvid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("USERPDVID");

                    b.Property<string>("Ativo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("ATIVO")
                        .IsFixedLength();

                    b.Property<DateTime>("Dataregistro")
                        .HasColumnType("DATE")
                        .HasColumnName("DATAREGISTRO");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("NOME");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("PASSWORD");

                    b.Property<decimal>("Pdvid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("PDVID");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("SOBRENOME");

                    b.HasKey("Userpdvid")
                        .HasName("TB_USERPDV_PK");

                    b.HasIndex("Pdvid");

                    b.ToTable("TB_USER_PDV", "RM99085");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbUsermaster", b =>
                {
                    b.Property<decimal>("Masterid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("MASTERID");

                    b.Property<string>("Ativo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("ATIVO")
                        .IsFixedLength();

                    b.Property<DateTime>("Dataregistro")
                        .HasColumnType("DATE")
                        .HasColumnName("DATAREGISTRO");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("NOME");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("SOBRENOME");

                    b.HasKey("Masterid")
                        .HasName("TB_USERMASTER_PK");

                    b.ToTable("TB_USERMASTER", "RM99085");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbCampanha", b =>
                {
                    b.HasOne("TPC_Challenge_API_NET.Models.TbCluster", "Cluster")
                        .WithMany("TbCampanhas")
                        .HasForeignKey("Clusterid")
                        .IsRequired()
                        .HasConstraintName("TB_CAMPANHAS_ID_CLUSTERID_FK");

                    b.HasOne("TPC_Challenge_API_NET.Models.TbUsermaster", "Master")
                        .WithMany("TbCampanhas")
                        .HasForeignKey("Masterid")
                        .IsRequired()
                        .HasConstraintName("TB_CAMPANHAS_ID_MASTERID_FK");

                    b.Navigation("Cluster");

                    b.Navigation("Master");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbCompra", b =>
                {
                    b.HasOne("TPC_Challenge_API_NET.Models.TbLoja", "Pdv")
                        .WithMany("TbCompras")
                        .HasForeignKey("Pdvid")
                        .IsRequired()
                        .HasConstraintName("TB_COMPRAS_ID_PDVID_FK");

                    b.HasOne("TPC_Challenge_API_NET.Models.TbUser", "Users")
                        .WithMany("TbCompras")
                        .HasForeignKey("Usersid")
                        .IsRequired()
                        .HasConstraintName("TB_COMPRAS_ID_USERSID_FK");

                    b.Navigation("Pdv");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbCreditCompra", b =>
                {
                    b.HasOne("TPC_Challenge_API_NET.Models.TbCompra", "Compra")
                        .WithMany()
                        .HasForeignKey("Compraid")
                        .IsRequired()
                        .HasConstraintName("TB_CREDIT_C_ID_COMPRASID_FK");

                    b.HasOne("TPC_Challenge_API_NET.Models.TbCredit", "Credit")
                        .WithMany()
                        .HasForeignKey("Creditid")
                        .IsRequired()
                        .HasConstraintName("TB_CREDIT_C_ID_CREDITID_FK");

                    b.Navigation("Compra");

                    b.Navigation("Credit");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbNotificaco", b =>
                {
                    b.HasOne("TPC_Challenge_API_NET.Models.TbLoja", "Pdv")
                        .WithMany("TbNotificacos")
                        .HasForeignKey("Pdvid")
                        .IsRequired()
                        .HasConstraintName("TB_NOTIFICACOES_ID_PDVID_FK");

                    b.Navigation("Pdv");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbPontosCompra", b =>
                {
                    b.HasOne("TPC_Challenge_API_NET.Models.TbCompra", "Compra")
                        .WithMany()
                        .HasForeignKey("Compraid")
                        .IsRequired()
                        .HasConstraintName("TB_PONTOS_C_ID_COMPRASID_FK");

                    b.HasOne("TPC_Challenge_API_NET.Models.TbPonto", "Point")
                        .WithMany()
                        .HasForeignKey("Pointid")
                        .IsRequired()
                        .HasConstraintName("TB_PONTOS_C_ID_PONTOSID_FK");

                    b.Navigation("Compra");

                    b.Navigation("Point");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbProduto", b =>
                {
                    b.HasOne("TPC_Challenge_API_NET.Models.TbCategoria", "Categoria")
                        .WithMany("TbProdutos")
                        .HasForeignKey("Categoriaid")
                        .IsRequired()
                        .HasConstraintName("TB_PRODUTOS_ID_CATEGORIAID_FK");

                    b.HasOne("TPC_Challenge_API_NET.Models.TbLoja", "Pdv")
                        .WithMany("TbProdutos")
                        .HasForeignKey("Pdvid")
                        .IsRequired()
                        .HasConstraintName("TB_PRODUTOS_ID_PDVID_FK");

                    b.Navigation("Categoria");

                    b.Navigation("Pdv");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbUserCluster", b =>
                {
                    b.HasOne("TPC_Challenge_API_NET.Models.TbCluster", "Cluster")
                        .WithMany("TbUserClusters")
                        .HasForeignKey("Clusterid")
                        .IsRequired()
                        .HasConstraintName("TB_USER_CLUSTER_ID_CLUSTER_FK");

                    b.HasOne("TPC_Challenge_API_NET.Models.TbUser", "User")
                        .WithMany("TbUserClusters")
                        .HasForeignKey("Userid")
                        .IsRequired()
                        .HasConstraintName("TB_USER_CLUSTER_ID_USERS_FK");

                    b.Navigation("Cluster");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbUserPdv", b =>
                {
                    b.HasOne("TPC_Challenge_API_NET.Models.TbLoja", "Pdv")
                        .WithMany("TbUserPdvs")
                        .HasForeignKey("Pdvid")
                        .IsRequired()
                        .HasConstraintName("TB_USER_PDV_ID_PDVID_FK");

                    b.Navigation("Pdv");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbCategoria", b =>
                {
                    b.Navigation("TbProdutos");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbCluster", b =>
                {
                    b.Navigation("TbCampanhas");

                    b.Navigation("TbUserClusters");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbLoja", b =>
                {
                    b.Navigation("TbCompras");

                    b.Navigation("TbNotificacos");

                    b.Navigation("TbProdutos");

                    b.Navigation("TbUserPdvs");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbUser", b =>
                {
                    b.Navigation("TbCompras");

                    b.Navigation("TbUserClusters");
                });

            modelBuilder.Entity("TPC_Challenge_API_NET.Models.TbUsermaster", b =>
                {
                    b.Navigation("TbCampanhas");
                });
#pragma warning restore 612, 618
        }
    }
}
